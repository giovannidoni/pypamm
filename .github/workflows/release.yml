name: Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.2
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install bump2version
        poetry install

    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Bump version
      id: bump
      run: |
        VERSION_BEFORE=$(poetry version -s)
        bump2version ${{ github.event.inputs.version_type }} --allow-dirty
        VERSION_AFTER=$(poetry version -s)
        echo "OLD_VERSION=$VERSION_BEFORE" >> $GITHUB_ENV
        echo "NEW_VERSION=$VERSION_AFTER" >> $GITHUB_ENV
        echo "new_version=$VERSION_AFTER" >> $GITHUB_OUTPUT

    - name: Push changes to GitHub
      run: |
        git push
        git push --tags

    - name: Install build dependencies
      run: |
        pip install numpy==2.0.0 cython==3.0.12

    - name: Build package
      run: poetry build

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.bump.outputs.new_version }}
        name: Release v${{ steps.bump.outputs.new_version }}
        draft: false
        prerelease: false
        files: |
          dist/*
        body: |
          ## PyPAMM v${{ steps.bump.outputs.new_version }}

          ${{ github.event.inputs.version_type }} release: v${{ env.OLD_VERSION }} â†’ v${{ env.NEW_VERSION }}

          ### Changelog

          Please edit this release to add changelog details.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
