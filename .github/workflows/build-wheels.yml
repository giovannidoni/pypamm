name: Build Wheels

on:
  push:
    branches: [ main ]
    tags: ['v*']
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ['cp39', 'cp310', 'cp311', 'cp312']
        exclude:
          # Exclude some builds to reduce CI time
          - os: windows-latest
            python: 'cp39'
          - os: windows-latest
            python: 'cp310'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: ${{ matrix.python }}-*
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_BEFORE_BUILD: "pip install -U pip setuptools wheel numpy==2.0.0 cython==3.0.12"
          CIBW_TEST_REQUIRES: "pytest"
          CIBW_TEST_COMMAND: "pytest {project}/tests"
          # Skip testing on PyPy
          CIBW_TEST_SKIP: "*-pp*"
          # Set environment variables to help with compilation
          CIBW_ENVIRONMENT: "CFLAGS='-DNPY_NO_DEPRECATED_API=NPY_1_7_API_VERSION'"

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: |
          pip install -U pip setuptools wheel numpy==2.0.0 cython==3.0.12

      - name: Build sdist
        run: |
          poetry build --format sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          
      - name: Prepare distribution files
        run: |
          mkdir -p dist_upload
          cp dist/wheels*/*.whl dist_upload/
          cp dist/sdist/*.tar.gz dist_upload/
          ls -la dist_upload/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist_upload/
          skip-existing: true 